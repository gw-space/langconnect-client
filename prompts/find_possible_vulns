Process all documents in the Mobile Vulnerabilities collection systematically:

PROCESS:
1. Initialize: offset = 0, total_processed = 0
2. Call: list_documents(collection_id="[ID]", limit=10, offset=offset)
3. Process each document in the response
4. Update: total_processed += number_of_documents_in_response
5. If response has 10 documents: offset += 10, go to step 2
6. If response has < 10 documents: you're done

TRACKING:
- Keep count of documents processed
- Note any errors or issues encountered
- Report progress after each batch

ERROR HANDLING:
- If a document fails to process, note it and continue with the next
- If the API call fails, retry once before moving to next batch

Start with the first batch and continue until all documents are processed. 

For each document:
	1.	Cross-reference the document with:
	  •	Relevant specifications in the 3GPP Specification collection.
	  •	Related and corroborative information from public internet sources.
	2.	Identify any new possible vulnerabilities that could be inferred or derived based on the information in the 3GPP specifications.
	  •	If no significant or potentially exploitable issue is found in the specifications, skip the document.
	3.	For any newly discovered possible vulnerability:
	  •	Carefully assess and assign an attack feasibility score on a scale from 1 (low feasibility) to 10 (high feasibility).
  	•	Check for duplicates: Before adding, ensure that the same vulnerability does not already exist in the Possible Vulnerabilities collection (based on similar metadata and content).
	4.	If it is confirmed as new:
	  •	Insert it into the Possible Vulnerabilities collection using the exact JSON format below.
	  •	Set enable_chunking: false.
	  •	All keys in metadata and content must remain unchanged. Do not alter or rename any fields.
	  •	The example values below are for demonstration only. All values must be updated based on actual analysis.

Example Format (Template — Values Are Examples Only)
  [metadata]
    "source": "gpt-4o",  // ← Use the actual LLM model used (e.g., gpt-4o, claude sonnet 4)
    "severity": "high",
    "spec_reference": "TS 24.008, TS 36.413",  // ← Reference actual relevant 3GPP specs
    "attack_complexity": "high",
    "attack_feasibility": 3,  // ← Integer score from 1 (lowest) to 10 (highest)
    "source_collection": "3GPP_Specification",
    "vulnerability_type": "handover_security",  // ← Use appropriate category
    "affected_generations": "3G, 4G, 5G",  // ← Adjust per analysis
    "verified": false  // ← Always false on initial insertion
  
  [content]: 
    "Vulnerability": "Inter-System Handover Security Context Derivation Weaknesses",
    "Risk Level": "High",
    "Affected Technologies": "2G, 3G, 4G, 5G (All generations)",
    "Related Standards": "3GPP TS 24.008, TS 36.413, TS 33.401",
    "Root Cause Analysis (from Specifications)": "The specifications require complex security key derivation during inter-system handovers, converting between different generation security contexts. This creates opportunities for cryptographic weaknesses and key prediction attacks.",
    "Specification Evidence": "- TS 24.008: \"An ME shall derive the GSM ciphering key (Kc')...\"\n- TS 24.008: \"derive the UMTS ciphering key (CK')...\"\n- Use of functions c3, c4, c5 for key conversion",
    "Attack Scenarios": "1. Cryptographic attacks on key derivation functions\n2. Downgrade attacks forcing weaker key paths\n3. Timing attacks on handover transitions",
    "Technical Impact": "- Key compromise across generations\n- Handover-based session hijacking\n- Potential cryptographic key recovery",
    "Exploitation Requirements": "- Access to or ability to trigger handover procedures\n- Advanced cryptanalysis skills\n- Monitoring of inter-system transitions",
    "Mitigation Strategies": "1. Use fresh keys per handover\n2. Authenticate inter-system transitions\n3. Add cryptographic hardening to key derivation",
    "Detection Methods": "- Monitor for repeated or abnormal handovers\n- Track key reuse across systems\n- Alert on unexpected inter-generation transitions",
    "Attack Feasibility": "Evaluation of the practical applicability of this vulnerability carefully"
  
Important Notes:
	•	All keys in metadata and content must remain unchanged. Do not alter or rename any fields.
	•	Only insert the document if it is clearly a new vulnerability not already present in the Possible Vulnerabilities collection.
	•	All values must be accurate and based on technical analysis of 3GPP specifications or other credible sources.
	•	Avoid false positives: skip if the document/spec does not present a meaningful security issue.